{
  EOModelVersion   = 2;
  adaptorClassName = PostgreSQLAdaptor;
  adaptorName      = PostgreSQL;
  connectionDictionary = {
    databaseName = gdl2test;
  };
  
  entities = (
    {
      name                 = Product;
      externalName         = PRODUCT;
      className            = EOGenericRecord;
      primaryKeyAttributes = ( pid );
      attributesUsedForLocking = ( pid );
      classProperties = ( name );

      attributes = (
        {
          name           = pid;
          columnName     = PID;
          externalType   = integer;
          valueClassName = NSNumber;
          valueType      = i;
        },
        {
          name           = name;
          columnName     = NAME;
          externalType   = char;
          valueClassName = NSString;
          width          = 30;
         },
        {
          name           = grpid;
          columnName     = GRPID;
          externalType   = integer;
          valueClassName = NSNumber;
          allowsNull     = Y;
          valueType      = i;
        }
      );
      relationships = (
        {
	  name = productGroup;
	  destination = ProductGroup;
	  isToMany = N;
	  joinSemantic = EOInnerJoin;
	  joins = (
	    {
	      sourceAttribute = grpid;
	      destinationAttribute = pid;
	    }
	  )
	}
      );
    },
    {
      name                 = ProductGroup;
      externalName         = PRODUCTGRP;
      className            = EOGenericRecord;
      primaryKeyAttributes = ( pid );
      attributesUsedForLocking = ( pid );
      classProperties = ( name, products );

      attributes = (
        {
          name           = pid;
          columnName     = PID;
          externalType   = integer;
          valueClassName = NSNumber;
          valueType      = i;
        },
        {
          name           = name;
          columnName     = NAME;
          externalType   = char;
          valueClassName = NSString;
          width          = 30;
         }
      );
      relationships = (
        {
	  name = products;
	  destination = Product;
	  isToMany = Y;
	  joinSemantic = EOInnerJoin;
	  joins = (
	    {
	      sourceAttribute = pid;
	      destinationAttribute = grpid;
	    }
	  )
	}
      )
    }
  )
}
